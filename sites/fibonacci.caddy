# Fibonacci Application Configuration
# This configuration handles reverse proxy for the Fibonacci API and Frontend services
#
# Required environment variables:
# - FIBONACCI_DOMAIN: The domain name for the Fibonacci application
# - FIBONACCI_API_HOST: Internal hostname/IP of the fibonacci-api service
# - FIBONACCI_API_PORT: Port where fibonacci-api is running (default: 8000)
# - FIBONACCI_WORKS_HOST: Internal hostname/IP of the fibonacci-works service (optional)
# - FIBONACCI_WORKS_PORT: Port where fibonacci-works is running (default: 80)
#
# The API is completely reverse-proxy agnostic. Caddy strips the /api prefix
# before forwarding requests, so the API always sees requests at its root path.

# Production HTTPS configuration
{$FIBONACCI_DOMAIN:fibonacci.example.com} {
    # Automatic HTTPS with Let's Encrypt
    # Make sure ACME_EMAIL is set in global config
    
    # Specify minimum TLS version
    tls {
        protocols tls1.2 tls1.3
    }
    
    # API routing - strip /api prefix before forwarding
    handle /api/* {
        # Remove the /api prefix from the URI
        uri strip_prefix /api
        
        reverse_proxy {$FIBONACCI_API_HOST:fibonacci-api}:{$FIBONACCI_API_PORT:8000} {
            # Add headers for proper proxying
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-For {remote_host}
            header_up Host {upstream_hostport}
            
            # Timeout configuration for slow endpoints
            transport http {
                dial_timeout 30s
                response_header_timeout 30s
            }
        }
    }
    
    
    
    # Health check endpoint (at domain level)
    handle /health {
        respond "Fibonacci Service OK" 200
    }
    
    # Frontend routing (if fibonacci-works is configured)
    @frontend_configured expression `"{$FIBONACCI_WORKS_HOST}" != ""`
    handle @frontend_configured {
        reverse_proxy {$FIBONACCI_WORKS_HOST:fibonacci-works}:{$FIBONACCI_WORKS_PORT:80} {
            # Try frontend briefly, fall back if not available
            lb_try_duration 1s
            fail_duration 1s
            
            # Add proxy headers
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # Default response when no frontend is configured
    handle {
        respond "Fibonacci API Service - Frontend not configured. API available at /api/*" 200
    }
    
    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # Prevent clickjacking
        X-Frame-Options "DENY"
        # Prevent MIME type sniffing
        X-Content-Type-Options "nosniff"
        # Enable XSS protection
        X-XSS-Protection "1; mode=block"
        # Referrer policy
        Referrer-Policy "strict-origin-when-cross-origin"
        # Remove server header
        -Server
    }
    
    # Enable compression
    encode gzip zstd
    
    # Logging
    log {
        output file /data/logs/fibonacci-access.log {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
    }
}

# HTTP to HTTPS redirect
http://{$FIBONACCI_DOMAIN:fibonacci.example.com} {
    redir https://{host}{uri} permanent
}